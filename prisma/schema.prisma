// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AppUser {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  panels    Panel[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Panel {
  id        Int   @id @default(autoincrement())
  name      String
  clients PanelClient[]
  accounts PanelAccounts[]
  users AppUser[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model PanelClient {
  id        Int   @id @default(autoincrement())
  name      String
  phone     String
  email     String
  panel     Panel    @relation(fields: [panelId], references: [id])
  panelId   Int
  accounts PanelAccounts[]
  accountsStatus ClientAccountStatus[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, panelId])
}

model PanelAccounts {
  id        Int   @id @default(autoincrement())
  panel     Panel    @relation(fields: [panelId], references: [id])
  panelId   Int
  email     String
  password  String
  clients   PanelClient[]
  clientsStatus ClientAccountStatus[]
  activatedAt DateTime
  expiresAt DateTime

}

model ClientAccountStatus {
  id        Int   @id @default(autoincrement())
  client    PanelClient @relation(fields: [clientId], references: [id])
  clientId  Int
  account   PanelAccounts @relation(fields: [accountId], references: [id])
  accountId Int
  lastPayAt DateTime
  expiresAt DateTime
  note      String
}